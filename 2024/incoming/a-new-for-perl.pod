Author: Olaf Alders <olaf@wundersolutions.com>
Title: A New [] for Perl
Topic: seekrit

=encoding utf8

=head2 Making links

Your article here goes here. The title will automatically be added by the site
builder. Make links with L<anchor text|http://example.com>. For module links,
merely specify the module, like L<Pod::Simple>.

=head2 Inline code

Make literal code text like this: C<$x>. If the code has angle brackets,
double up the angle brackets with extra space before and after, like this
C<< $obj->method >>..

=head2 Block code

There are regular Pod code verbatim text, which are indented lines:

    my $x = 1_00_000 ** $::xyzzy;

A C<perl> section can do syntax highlighting

=begin perl

    # inside "perl" blocks, make syntax-highlighted code
    # with Pod::Elemental::Transformer::SynHi
    my $x = 1_00_000 ** $::xyzzy;

=end perl

A C<code> section can syntax-highlight non-Perl too:

=begin code

  # inside "code" blocks, make syntax-highlighted code
  # with Pod::Elemental::Transformer::Codebox

=end code

You can try vim syntax highlighting hints, such as declaring that a
snippet is JSON. The hint is the first line and indented at the same
level.

	#!vim json
	{
	"Name": "Donner",
	"aliases": [ "Dunder", "Donder" ],
	"start-date": "1823-12-24"
	}

=head2 Raw HTML

Include some raw HTML. If you are including static content, you can add it to a
C<share/static> folder within your YYYY folder. e.g.
C<2024/share/static/some-graphic.png>. A blank line breaks the HTML spell:

=for :html
<img src="some-graphic.png">
<p>Some para</p>

This is back to Pod. For big blocks of HTML, including blank lines,
use C<=begin html>.

=begin html

<p>Some para</p>

<p>Another para</p>

=end html

=head2 Lists

=for :list
* short list syntax from Pod::Elemental::Transformer::List
* duck
* duck
* goose

=cut
